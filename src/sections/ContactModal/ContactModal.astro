---
import Box from '@components/Box/Box.astro'
import Button from '@components/Button/Button.astro'
import Input from '@components/Inputs/Input/Input.astro'
import TextArea from '@components/Inputs/TextArea/TextArea.astro'
import Modal from '@components/Modal/Modal.astro'
import { modalHidden } from '@components/Modal/styles.css'
import Text from '@components/Text/Text.astro'

import { styledContactForm } from './styles.css'
---

<Modal id="contact-modal" className={modalHidden}>
  <Box direction="column" gap={16} align="center" slot="modal-header">
    <Text variant="heading-2">Napisz do nas</Text>
    <Text variant="text-medium"> Chętnie odpowiemy na wszelkie pytania.</Text>
  </Box>

  <!-- Success Message  -->
  <Box
    direction="column"
    gap={24}
    mt={48}
    align="center"
    slot="modal-content"
    id="success-message"
    display="none"
  >
    <Text variant="heading-3" textAlign="center">Dziękujemy!</Text>
    <Text variant="text-medium" textAlign="center">
      Wiadomość została wysłana pomyślnie. Odpowiemy na nią tak szybko, jak to
      możliwe.
    </Text>
    <Button
      type="button"
      variant="primary"
      id="close-modal-btn"
      size="large"
      data-trigger="contact-modal"
    >
      Zamknij
    </Button>
  </Box>

  <!-- Contact Form -->
  <form
    name="contact-form"
    slot="modal-content"
    id="contact-form"
    method="POST"
    data-netlify="true"
    data-netlify-honeypot="bot-field"
    class={styledContactForm}
  >
    <div style="display: none;">
      <label
        >Don't fill this out if you're human:
        <input name="bot-field" />
      </label>
    </div>
    <Input
      type="text"
      id="contact-name"
      required
      pattern="^[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]+( +[a-zA-ZąćęłńóśźżĄĆĘŁŃÓŚŹŻ]+)* *$"
      errorMessage="Podaj imię i nazwisko."
      requiredMessage="Imię i nazwisko jest wymagane."
      name="name"
      label="Imię i nazwisko"
      placeholder="Imię i nazwisko"
    />
    <Input
      type="text"
      id="contact-email"
      required
      pattern="[a-z0-9._%+\-]+@[a-z0-9.\-]+\.[a-z]{2,}$"
      errorMessage="Podaj poprawny adres e-mail w formacie: example@example.com"
      requiredMessage="E-mail jest wymagany."
      name="email"
      label="E-mail"
      placeholder="E-mail"
    />
    <Input
      type="text"
      id="contact-phone"
      required
      pattern="^[\d\s\-\+\(\)]{9,15}$"
      errorMessage="Podaj poprawny numer telefonu."
      requiredMessage="Numer telefonu jest wymagany."
      name="phone"
      label="Numer telefonu"
      placeholder="Numer telefonu"
    />
    <TextArea
      name="message"
      required
      label="Twoja wiadomość"
      id="contact-message"
      placeholder="Twoja wiadomość"
    />
    <Button
      type="submit"
      variant="primary"
      form="contact-form"
      id="contact-submit"
      size="large"
      >Wyślij
    </Button>

    <!-- Error message -->
    <div id="form-error" style="display: none; margin-top: 1rem;">
      <Text variant="text-regular" textAlign="center">
        Wystąpił błąd podczas wysyłania wiadomości. Spróbuj ponownie.
      </Text>
    </div>
  </form>
</Modal>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('contact-form') as HTMLFormElement
    const submitButton = document.getElementById(
      'contact-submit'
    ) as HTMLButtonElement
    const errorDiv = document.getElementById('form-error') as HTMLDivElement
    const successMessage = document.getElementById(
      'success-message'
    ) as HTMLDivElement
    const closeModalBtn = document.getElementById(
      'close-modal-btn'
    ) as HTMLButtonElement

    const submitButtonText = submitButton?.querySelector('p')
    const originalButtonText = submitButtonText?.textContent || 'Wyślij'

    if (form) {
      form.addEventListener('submit', async function (e) {
        e.preventDefault()

        // Disable submit button and show loading state
        submitButton.disabled = true
        if (submitButtonText) {
          submitButtonText.textContent = 'Wysyłam...'
        }
        errorDiv.style.display = 'none'

        try {
          const formData = new FormData(form)

          const response = await fetch('/', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams(formData as any).toString(),
          })

          if (response.ok) {
            form.style.display = 'none'
            successMessage.style.display = 'flex'
          } else {
            throw new Error('Network response was not ok')
          }
        } catch (error) {
          console.error('Error:', error)
          errorDiv.style.display = 'block'

          submitButton.disabled = false
          submitButton.textContent = 'Wyślij'
        }
      })
    }

    if (closeModalBtn) {
      closeModalBtn.addEventListener('click', function () {
        form.style.display = 'block'
        successMessage.style.display = 'none'
        form.reset()
        submitButton.disabled = false
        if (submitButtonText) {
          submitButtonText.textContent = originalButtonText
        }
        errorDiv.style.display = 'none'
      })
    }
  })
</script>
