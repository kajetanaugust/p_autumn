---
import {Image as AstroImage} from 'astro:assets'
import type {ImageMetadata} from 'astro'
import Box from "../Box/Box.astro";
import type {Shadow} from "../../tokens/Shadows/types";
import type {Radius} from "../../tokens/Radius/types";
import type {Position, Spacings} from "../../utils/types";
import type {Display} from "../../utils/types";
import type {FetchPriority, Layout, Loading, ObjectFit, ObjectPosition, ResponsiveType} from "./types";
import {
    imageBase,
} from "./styles.css";

interface Props extends Spacings {
    // Image specific props
    src: ImageMetadata;
    loading?: Loading;
    fetchPriority?: FetchPriority;
    className?: string;
    alt: string;
    width: number;
    height: number;
    objectFit?: ObjectFit;
    objectPosition?: ObjectPosition;
    responsive?: ResponsiveType;
    maxWidth?: string | number;
    maxHeight?: string | number;
    quality?: number;
    layout?: Layout;
    // Box wrapper props
    shadow?: Shadow;
    borderRadius?: Radius;
    position?: Position;
    display?: Display;
}

const {
    src,
    loading = 'lazy',
    alt,
    className,
    shadow,
    borderRadius,
    display,
    position,
    p,
    px,
    py,
    pt,
    pb,
    ps,
    pe,
    m,
    mx,
    my,
    mt,
    mb,
    ms,
    me,
    objectFit = 'cover',
    objectPosition = 'center',
    responsive = 'fixed',
    maxHeight,
    fetchPriority = 'auto',
    quality = 75,
} = Astro.props

const imageClasses = [
    imageBase,
    className
].filter(Boolean).join(' ')

const imageStyles: Record<string, string> = {};

if (responsive === 'fullWidth' && maxHeight) {
    imageStyles.width = '100%';
    imageStyles.height = 'auto';
}
---

<Box
        shadow={shadow}
        borderRadius={borderRadius}
        position={position}
        display={display}
        p={p} px={px} py={py} pt={pt} pb={pb} ps={ps} pe={pe}
        m={m} mx={mx} my={my} mt={mt} mb={mb} ms={ms} me={me}
>
    <AstroImage
            src={src}
            alt={alt}
            loading={loading}
            class={imageClasses}
            style={imageStyles}
            fetchpriority={fetchPriority}
            quality={quality}
            fit={objectFit}
            position={objectPosition}
    />
</Box>
